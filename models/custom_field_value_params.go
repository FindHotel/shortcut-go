// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CustomFieldValueParams custom field value params
//
// swagger:model CustomFieldValueParams
type CustomFieldValueParams struct {

	// The unique public ID for the CustomField.
	// Required: true
	// Format: uuid
	FieldID *strfmt.UUID `json:"field_id"`

	// A literal value for the CustomField. Currently ignored.
	Value string `json:"value,omitempty"`

	// The unique public ID for the CustomFieldEnumValue.
	// Required: true
	// Format: uuid
	ValueID *strfmt.UUID `json:"value_id"`
}

// Validate validates this custom field value params
func (m *CustomFieldValueParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFieldID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValueID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustomFieldValueParams) validateFieldID(formats strfmt.Registry) error {

	if err := validate.Required("field_id", "body", m.FieldID); err != nil {
		return err
	}

	if err := validate.FormatOf("field_id", "body", "uuid", m.FieldID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CustomFieldValueParams) validateValueID(formats strfmt.Registry) error {

	if err := validate.Required("value_id", "body", m.ValueID); err != nil {
		return err
	}

	if err := validate.FormatOf("value_id", "body", "uuid", m.ValueID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this custom field value params based on context it is used
func (m *CustomFieldValueParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CustomFieldValueParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomFieldValueParams) UnmarshalBinary(b []byte) error {
	var res CustomFieldValueParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
