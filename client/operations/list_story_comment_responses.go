// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/FindHotel/shortcut-go/models"
)

// ListStoryCommentReader is a Reader for the ListStoryComment structure.
type ListStoryCommentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListStoryCommentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListStoryCommentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListStoryCommentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListStoryCommentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListStoryCommentUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v3/stories/{story-public-id}/comments] listStoryComment", response, response.Code())
	}
}

// NewListStoryCommentOK creates a ListStoryCommentOK with default headers values
func NewListStoryCommentOK() *ListStoryCommentOK {
	return &ListStoryCommentOK{}
}

/*
ListStoryCommentOK describes a response with status code 200, with default header values.

Resource
*/
type ListStoryCommentOK struct {
	Payload []*models.StoryComment
}

// IsSuccess returns true when this list story comment o k response has a 2xx status code
func (o *ListStoryCommentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list story comment o k response has a 3xx status code
func (o *ListStoryCommentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list story comment o k response has a 4xx status code
func (o *ListStoryCommentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list story comment o k response has a 5xx status code
func (o *ListStoryCommentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list story comment o k response a status code equal to that given
func (o *ListStoryCommentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list story comment o k response
func (o *ListStoryCommentOK) Code() int {
	return 200
}

func (o *ListStoryCommentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v3/stories/{story-public-id}/comments][%d] listStoryCommentOK %s", 200, payload)
}

func (o *ListStoryCommentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v3/stories/{story-public-id}/comments][%d] listStoryCommentOK %s", 200, payload)
}

func (o *ListStoryCommentOK) GetPayload() []*models.StoryComment {
	return o.Payload
}

func (o *ListStoryCommentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListStoryCommentBadRequest creates a ListStoryCommentBadRequest with default headers values
func NewListStoryCommentBadRequest() *ListStoryCommentBadRequest {
	return &ListStoryCommentBadRequest{}
}

/*
ListStoryCommentBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type ListStoryCommentBadRequest struct {
}

// IsSuccess returns true when this list story comment bad request response has a 2xx status code
func (o *ListStoryCommentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list story comment bad request response has a 3xx status code
func (o *ListStoryCommentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list story comment bad request response has a 4xx status code
func (o *ListStoryCommentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list story comment bad request response has a 5xx status code
func (o *ListStoryCommentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list story comment bad request response a status code equal to that given
func (o *ListStoryCommentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list story comment bad request response
func (o *ListStoryCommentBadRequest) Code() int {
	return 400
}

func (o *ListStoryCommentBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v3/stories/{story-public-id}/comments][%d] listStoryCommentBadRequest", 400)
}

func (o *ListStoryCommentBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v3/stories/{story-public-id}/comments][%d] listStoryCommentBadRequest", 400)
}

func (o *ListStoryCommentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListStoryCommentNotFound creates a ListStoryCommentNotFound with default headers values
func NewListStoryCommentNotFound() *ListStoryCommentNotFound {
	return &ListStoryCommentNotFound{}
}

/*
ListStoryCommentNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type ListStoryCommentNotFound struct {
}

// IsSuccess returns true when this list story comment not found response has a 2xx status code
func (o *ListStoryCommentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list story comment not found response has a 3xx status code
func (o *ListStoryCommentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list story comment not found response has a 4xx status code
func (o *ListStoryCommentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list story comment not found response has a 5xx status code
func (o *ListStoryCommentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list story comment not found response a status code equal to that given
func (o *ListStoryCommentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list story comment not found response
func (o *ListStoryCommentNotFound) Code() int {
	return 404
}

func (o *ListStoryCommentNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v3/stories/{story-public-id}/comments][%d] listStoryCommentNotFound", 404)
}

func (o *ListStoryCommentNotFound) String() string {
	return fmt.Sprintf("[GET /api/v3/stories/{story-public-id}/comments][%d] listStoryCommentNotFound", 404)
}

func (o *ListStoryCommentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListStoryCommentUnprocessableEntity creates a ListStoryCommentUnprocessableEntity with default headers values
func NewListStoryCommentUnprocessableEntity() *ListStoryCommentUnprocessableEntity {
	return &ListStoryCommentUnprocessableEntity{}
}

/*
ListStoryCommentUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type ListStoryCommentUnprocessableEntity struct {
}

// IsSuccess returns true when this list story comment unprocessable entity response has a 2xx status code
func (o *ListStoryCommentUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list story comment unprocessable entity response has a 3xx status code
func (o *ListStoryCommentUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list story comment unprocessable entity response has a 4xx status code
func (o *ListStoryCommentUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list story comment unprocessable entity response has a 5xx status code
func (o *ListStoryCommentUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list story comment unprocessable entity response a status code equal to that given
func (o *ListStoryCommentUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list story comment unprocessable entity response
func (o *ListStoryCommentUnprocessableEntity) Code() int {
	return 422
}

func (o *ListStoryCommentUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v3/stories/{story-public-id}/comments][%d] listStoryCommentUnprocessableEntity", 422)
}

func (o *ListStoryCommentUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/v3/stories/{story-public-id}/comments][%d] listStoryCommentUnprocessableEntity", 422)
}

func (o *ListStoryCommentUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
