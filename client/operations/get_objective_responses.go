// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/FindHotel/shortcut-go/models"
)

// GetObjectiveReader is a Reader for the GetObjective structure.
type GetObjectiveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetObjectiveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetObjectiveOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetObjectiveBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetObjectiveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetObjectiveUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v3/objectives/{objective-public-id}] getObjective", response, response.Code())
	}
}

// NewGetObjectiveOK creates a GetObjectiveOK with default headers values
func NewGetObjectiveOK() *GetObjectiveOK {
	return &GetObjectiveOK{}
}

/*
GetObjectiveOK describes a response with status code 200, with default header values.

Resource
*/
type GetObjectiveOK struct {
	Payload *models.Objective
}

// IsSuccess returns true when this get objective o k response has a 2xx status code
func (o *GetObjectiveOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get objective o k response has a 3xx status code
func (o *GetObjectiveOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get objective o k response has a 4xx status code
func (o *GetObjectiveOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get objective o k response has a 5xx status code
func (o *GetObjectiveOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get objective o k response a status code equal to that given
func (o *GetObjectiveOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get objective o k response
func (o *GetObjectiveOK) Code() int {
	return 200
}

func (o *GetObjectiveOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v3/objectives/{objective-public-id}][%d] getObjectiveOK %s", 200, payload)
}

func (o *GetObjectiveOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v3/objectives/{objective-public-id}][%d] getObjectiveOK %s", 200, payload)
}

func (o *GetObjectiveOK) GetPayload() *models.Objective {
	return o.Payload
}

func (o *GetObjectiveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Objective)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetObjectiveBadRequest creates a GetObjectiveBadRequest with default headers values
func NewGetObjectiveBadRequest() *GetObjectiveBadRequest {
	return &GetObjectiveBadRequest{}
}

/*
GetObjectiveBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type GetObjectiveBadRequest struct {
}

// IsSuccess returns true when this get objective bad request response has a 2xx status code
func (o *GetObjectiveBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get objective bad request response has a 3xx status code
func (o *GetObjectiveBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get objective bad request response has a 4xx status code
func (o *GetObjectiveBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get objective bad request response has a 5xx status code
func (o *GetObjectiveBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get objective bad request response a status code equal to that given
func (o *GetObjectiveBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get objective bad request response
func (o *GetObjectiveBadRequest) Code() int {
	return 400
}

func (o *GetObjectiveBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v3/objectives/{objective-public-id}][%d] getObjectiveBadRequest", 400)
}

func (o *GetObjectiveBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v3/objectives/{objective-public-id}][%d] getObjectiveBadRequest", 400)
}

func (o *GetObjectiveBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetObjectiveNotFound creates a GetObjectiveNotFound with default headers values
func NewGetObjectiveNotFound() *GetObjectiveNotFound {
	return &GetObjectiveNotFound{}
}

/*
GetObjectiveNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type GetObjectiveNotFound struct {
}

// IsSuccess returns true when this get objective not found response has a 2xx status code
func (o *GetObjectiveNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get objective not found response has a 3xx status code
func (o *GetObjectiveNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get objective not found response has a 4xx status code
func (o *GetObjectiveNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get objective not found response has a 5xx status code
func (o *GetObjectiveNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get objective not found response a status code equal to that given
func (o *GetObjectiveNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get objective not found response
func (o *GetObjectiveNotFound) Code() int {
	return 404
}

func (o *GetObjectiveNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v3/objectives/{objective-public-id}][%d] getObjectiveNotFound", 404)
}

func (o *GetObjectiveNotFound) String() string {
	return fmt.Sprintf("[GET /api/v3/objectives/{objective-public-id}][%d] getObjectiveNotFound", 404)
}

func (o *GetObjectiveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetObjectiveUnprocessableEntity creates a GetObjectiveUnprocessableEntity with default headers values
func NewGetObjectiveUnprocessableEntity() *GetObjectiveUnprocessableEntity {
	return &GetObjectiveUnprocessableEntity{}
}

/*
GetObjectiveUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type GetObjectiveUnprocessableEntity struct {
}

// IsSuccess returns true when this get objective unprocessable entity response has a 2xx status code
func (o *GetObjectiveUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get objective unprocessable entity response has a 3xx status code
func (o *GetObjectiveUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get objective unprocessable entity response has a 4xx status code
func (o *GetObjectiveUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get objective unprocessable entity response has a 5xx status code
func (o *GetObjectiveUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get objective unprocessable entity response a status code equal to that given
func (o *GetObjectiveUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get objective unprocessable entity response
func (o *GetObjectiveUnprocessableEntity) Code() int {
	return 422
}

func (o *GetObjectiveUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v3/objectives/{objective-public-id}][%d] getObjectiveUnprocessableEntity", 422)
}

func (o *GetObjectiveUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/v3/objectives/{objective-public-id}][%d] getObjectiveUnprocessableEntity", 422)
}

func (o *GetObjectiveUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
