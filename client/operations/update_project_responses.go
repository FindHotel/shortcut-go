// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/FindHotel/shortcut-go/models"
)

// UpdateProjectReader is a Reader for the UpdateProject structure.
type UpdateProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateProjectUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateProjectOK creates a UpdateProjectOK with default headers values
func NewUpdateProjectOK() *UpdateProjectOK {
	return &UpdateProjectOK{}
}

/*
UpdateProjectOK describes a response with status code 200, with default header values.

Resource
*/
type UpdateProjectOK struct {
	Payload *models.Project
}

// IsSuccess returns true when this update project o k response has a 2xx status code
func (o *UpdateProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update project o k response has a 3xx status code
func (o *UpdateProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update project o k response has a 4xx status code
func (o *UpdateProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update project o k response has a 5xx status code
func (o *UpdateProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update project o k response a status code equal to that given
func (o *UpdateProjectOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateProjectOK) Error() string {
	return fmt.Sprintf("[PUT /api/v3/projects/{project-public-id}][%d] updateProjectOK  %+v", 200, o.Payload)
}

func (o *UpdateProjectOK) String() string {
	return fmt.Sprintf("[PUT /api/v3/projects/{project-public-id}][%d] updateProjectOK  %+v", 200, o.Payload)
}

func (o *UpdateProjectOK) GetPayload() *models.Project {
	return o.Payload
}

func (o *UpdateProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Project)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProjectBadRequest creates a UpdateProjectBadRequest with default headers values
func NewUpdateProjectBadRequest() *UpdateProjectBadRequest {
	return &UpdateProjectBadRequest{}
}

/*
UpdateProjectBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type UpdateProjectBadRequest struct {
}

// IsSuccess returns true when this update project bad request response has a 2xx status code
func (o *UpdateProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update project bad request response has a 3xx status code
func (o *UpdateProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update project bad request response has a 4xx status code
func (o *UpdateProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update project bad request response has a 5xx status code
func (o *UpdateProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update project bad request response a status code equal to that given
func (o *UpdateProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateProjectBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v3/projects/{project-public-id}][%d] updateProjectBadRequest ", 400)
}

func (o *UpdateProjectBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v3/projects/{project-public-id}][%d] updateProjectBadRequest ", 400)
}

func (o *UpdateProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProjectNotFound creates a UpdateProjectNotFound with default headers values
func NewUpdateProjectNotFound() *UpdateProjectNotFound {
	return &UpdateProjectNotFound{}
}

/*
UpdateProjectNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type UpdateProjectNotFound struct {
}

// IsSuccess returns true when this update project not found response has a 2xx status code
func (o *UpdateProjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update project not found response has a 3xx status code
func (o *UpdateProjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update project not found response has a 4xx status code
func (o *UpdateProjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update project not found response has a 5xx status code
func (o *UpdateProjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update project not found response a status code equal to that given
func (o *UpdateProjectNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateProjectNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v3/projects/{project-public-id}][%d] updateProjectNotFound ", 404)
}

func (o *UpdateProjectNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v3/projects/{project-public-id}][%d] updateProjectNotFound ", 404)
}

func (o *UpdateProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateProjectUnprocessableEntity creates a UpdateProjectUnprocessableEntity with default headers values
func NewUpdateProjectUnprocessableEntity() *UpdateProjectUnprocessableEntity {
	return &UpdateProjectUnprocessableEntity{}
}

/*
UpdateProjectUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type UpdateProjectUnprocessableEntity struct {
}

// IsSuccess returns true when this update project unprocessable entity response has a 2xx status code
func (o *UpdateProjectUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update project unprocessable entity response has a 3xx status code
func (o *UpdateProjectUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update project unprocessable entity response has a 4xx status code
func (o *UpdateProjectUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update project unprocessable entity response has a 5xx status code
func (o *UpdateProjectUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update project unprocessable entity response a status code equal to that given
func (o *UpdateProjectUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *UpdateProjectUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/v3/projects/{project-public-id}][%d] updateProjectUnprocessableEntity ", 422)
}

func (o *UpdateProjectUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /api/v3/projects/{project-public-id}][%d] updateProjectUnprocessableEntity ", 422)
}

func (o *UpdateProjectUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
