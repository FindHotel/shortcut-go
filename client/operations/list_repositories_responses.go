// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/FindHotel/shortcut-go/models"
)

// ListRepositoriesReader is a Reader for the ListRepositories structure.
type ListRepositoriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRepositoriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListRepositoriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListRepositoriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListRepositoriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListRepositoriesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v3/repositories] listRepositories", response, response.Code())
	}
}

// NewListRepositoriesOK creates a ListRepositoriesOK with default headers values
func NewListRepositoriesOK() *ListRepositoriesOK {
	return &ListRepositoriesOK{}
}

/*
ListRepositoriesOK describes a response with status code 200, with default header values.

Resource
*/
type ListRepositoriesOK struct {
	Payload []*models.Repository
}

// IsSuccess returns true when this list repositories o k response has a 2xx status code
func (o *ListRepositoriesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list repositories o k response has a 3xx status code
func (o *ListRepositoriesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list repositories o k response has a 4xx status code
func (o *ListRepositoriesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list repositories o k response has a 5xx status code
func (o *ListRepositoriesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list repositories o k response a status code equal to that given
func (o *ListRepositoriesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list repositories o k response
func (o *ListRepositoriesOK) Code() int {
	return 200
}

func (o *ListRepositoriesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v3/repositories][%d] listRepositoriesOK %s", 200, payload)
}

func (o *ListRepositoriesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v3/repositories][%d] listRepositoriesOK %s", 200, payload)
}

func (o *ListRepositoriesOK) GetPayload() []*models.Repository {
	return o.Payload
}

func (o *ListRepositoriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRepositoriesBadRequest creates a ListRepositoriesBadRequest with default headers values
func NewListRepositoriesBadRequest() *ListRepositoriesBadRequest {
	return &ListRepositoriesBadRequest{}
}

/*
ListRepositoriesBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type ListRepositoriesBadRequest struct {
}

// IsSuccess returns true when this list repositories bad request response has a 2xx status code
func (o *ListRepositoriesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list repositories bad request response has a 3xx status code
func (o *ListRepositoriesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list repositories bad request response has a 4xx status code
func (o *ListRepositoriesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list repositories bad request response has a 5xx status code
func (o *ListRepositoriesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list repositories bad request response a status code equal to that given
func (o *ListRepositoriesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list repositories bad request response
func (o *ListRepositoriesBadRequest) Code() int {
	return 400
}

func (o *ListRepositoriesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v3/repositories][%d] listRepositoriesBadRequest", 400)
}

func (o *ListRepositoriesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v3/repositories][%d] listRepositoriesBadRequest", 400)
}

func (o *ListRepositoriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRepositoriesNotFound creates a ListRepositoriesNotFound with default headers values
func NewListRepositoriesNotFound() *ListRepositoriesNotFound {
	return &ListRepositoriesNotFound{}
}

/*
ListRepositoriesNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type ListRepositoriesNotFound struct {
}

// IsSuccess returns true when this list repositories not found response has a 2xx status code
func (o *ListRepositoriesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list repositories not found response has a 3xx status code
func (o *ListRepositoriesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list repositories not found response has a 4xx status code
func (o *ListRepositoriesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list repositories not found response has a 5xx status code
func (o *ListRepositoriesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list repositories not found response a status code equal to that given
func (o *ListRepositoriesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list repositories not found response
func (o *ListRepositoriesNotFound) Code() int {
	return 404
}

func (o *ListRepositoriesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v3/repositories][%d] listRepositoriesNotFound", 404)
}

func (o *ListRepositoriesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v3/repositories][%d] listRepositoriesNotFound", 404)
}

func (o *ListRepositoriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListRepositoriesUnprocessableEntity creates a ListRepositoriesUnprocessableEntity with default headers values
func NewListRepositoriesUnprocessableEntity() *ListRepositoriesUnprocessableEntity {
	return &ListRepositoriesUnprocessableEntity{}
}

/*
ListRepositoriesUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type ListRepositoriesUnprocessableEntity struct {
}

// IsSuccess returns true when this list repositories unprocessable entity response has a 2xx status code
func (o *ListRepositoriesUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list repositories unprocessable entity response has a 3xx status code
func (o *ListRepositoriesUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list repositories unprocessable entity response has a 4xx status code
func (o *ListRepositoriesUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list repositories unprocessable entity response has a 5xx status code
func (o *ListRepositoriesUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list repositories unprocessable entity response a status code equal to that given
func (o *ListRepositoriesUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list repositories unprocessable entity response
func (o *ListRepositoriesUnprocessableEntity) Code() int {
	return 422
}

func (o *ListRepositoriesUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v3/repositories][%d] listRepositoriesUnprocessableEntity", 422)
}

func (o *ListRepositoriesUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/v3/repositories][%d] listRepositoriesUnprocessableEntity", 422)
}

func (o *ListRepositoriesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
