// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteTaskReader is a Reader for the DeleteTask structure.
type DeleteTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteTaskNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTaskNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteTaskUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}] deleteTask", response, response.Code())
	}
}

// NewDeleteTaskNoContent creates a DeleteTaskNoContent with default headers values
func NewDeleteTaskNoContent() *DeleteTaskNoContent {
	return &DeleteTaskNoContent{}
}

/*
DeleteTaskNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteTaskNoContent struct {
}

// IsSuccess returns true when this delete task no content response has a 2xx status code
func (o *DeleteTaskNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete task no content response has a 3xx status code
func (o *DeleteTaskNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete task no content response has a 4xx status code
func (o *DeleteTaskNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete task no content response has a 5xx status code
func (o *DeleteTaskNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete task no content response a status code equal to that given
func (o *DeleteTaskNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete task no content response
func (o *DeleteTaskNoContent) Code() int {
	return 204
}

func (o *DeleteTaskNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] deleteTaskNoContent", 204)
}

func (o *DeleteTaskNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] deleteTaskNoContent", 204)
}

func (o *DeleteTaskNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTaskBadRequest creates a DeleteTaskBadRequest with default headers values
func NewDeleteTaskBadRequest() *DeleteTaskBadRequest {
	return &DeleteTaskBadRequest{}
}

/*
DeleteTaskBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type DeleteTaskBadRequest struct {
}

// IsSuccess returns true when this delete task bad request response has a 2xx status code
func (o *DeleteTaskBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete task bad request response has a 3xx status code
func (o *DeleteTaskBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete task bad request response has a 4xx status code
func (o *DeleteTaskBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete task bad request response has a 5xx status code
func (o *DeleteTaskBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete task bad request response a status code equal to that given
func (o *DeleteTaskBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete task bad request response
func (o *DeleteTaskBadRequest) Code() int {
	return 400
}

func (o *DeleteTaskBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] deleteTaskBadRequest", 400)
}

func (o *DeleteTaskBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] deleteTaskBadRequest", 400)
}

func (o *DeleteTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTaskNotFound creates a DeleteTaskNotFound with default headers values
func NewDeleteTaskNotFound() *DeleteTaskNotFound {
	return &DeleteTaskNotFound{}
}

/*
DeleteTaskNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type DeleteTaskNotFound struct {
}

// IsSuccess returns true when this delete task not found response has a 2xx status code
func (o *DeleteTaskNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete task not found response has a 3xx status code
func (o *DeleteTaskNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete task not found response has a 4xx status code
func (o *DeleteTaskNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete task not found response has a 5xx status code
func (o *DeleteTaskNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete task not found response a status code equal to that given
func (o *DeleteTaskNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete task not found response
func (o *DeleteTaskNotFound) Code() int {
	return 404
}

func (o *DeleteTaskNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] deleteTaskNotFound", 404)
}

func (o *DeleteTaskNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] deleteTaskNotFound", 404)
}

func (o *DeleteTaskNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTaskUnprocessableEntity creates a DeleteTaskUnprocessableEntity with default headers values
func NewDeleteTaskUnprocessableEntity() *DeleteTaskUnprocessableEntity {
	return &DeleteTaskUnprocessableEntity{}
}

/*
DeleteTaskUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type DeleteTaskUnprocessableEntity struct {
}

// IsSuccess returns true when this delete task unprocessable entity response has a 2xx status code
func (o *DeleteTaskUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete task unprocessable entity response has a 3xx status code
func (o *DeleteTaskUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete task unprocessable entity response has a 4xx status code
func (o *DeleteTaskUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete task unprocessable entity response has a 5xx status code
func (o *DeleteTaskUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete task unprocessable entity response a status code equal to that given
func (o *DeleteTaskUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete task unprocessable entity response
func (o *DeleteTaskUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteTaskUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] deleteTaskUnprocessableEntity", 422)
}

func (o *DeleteTaskUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/tasks/{task-public-id}][%d] deleteTaskUnprocessableEntity", 422)
}

func (o *DeleteTaskUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
