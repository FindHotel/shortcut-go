// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/FindHotel/shortcut-go/models"
)

// SearchEpicsReader is a Reader for the SearchEpics structure.
type SearchEpicsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchEpicsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchEpicsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchEpicsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchEpicsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSearchEpicsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchEpicsOK creates a SearchEpicsOK with default headers values
func NewSearchEpicsOK() *SearchEpicsOK {
	return &SearchEpicsOK{}
}

/*
SearchEpicsOK describes a response with status code 200, with default header values.

Resource
*/
type SearchEpicsOK struct {
	Payload *models.EpicSearchResults
}

// IsSuccess returns true when this search epics o k response has a 2xx status code
func (o *SearchEpicsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search epics o k response has a 3xx status code
func (o *SearchEpicsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search epics o k response has a 4xx status code
func (o *SearchEpicsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search epics o k response has a 5xx status code
func (o *SearchEpicsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search epics o k response a status code equal to that given
func (o *SearchEpicsOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchEpicsOK) Error() string {
	return fmt.Sprintf("[GET /api/v3/search/epics][%d] searchEpicsOK  %+v", 200, o.Payload)
}

func (o *SearchEpicsOK) String() string {
	return fmt.Sprintf("[GET /api/v3/search/epics][%d] searchEpicsOK  %+v", 200, o.Payload)
}

func (o *SearchEpicsOK) GetPayload() *models.EpicSearchResults {
	return o.Payload
}

func (o *SearchEpicsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EpicSearchResults)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchEpicsBadRequest creates a SearchEpicsBadRequest with default headers values
func NewSearchEpicsBadRequest() *SearchEpicsBadRequest {
	return &SearchEpicsBadRequest{}
}

/*
SearchEpicsBadRequest describes a response with status code 400, with default header values.

**Either:** (1) Schema mismatch **or** (2) Maximum of 1000 search results exceeded
*/
type SearchEpicsBadRequest struct {
	Payload *models.MaxSearchResultsExceededError
}

// IsSuccess returns true when this search epics bad request response has a 2xx status code
func (o *SearchEpicsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search epics bad request response has a 3xx status code
func (o *SearchEpicsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search epics bad request response has a 4xx status code
func (o *SearchEpicsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search epics bad request response has a 5xx status code
func (o *SearchEpicsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search epics bad request response a status code equal to that given
func (o *SearchEpicsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchEpicsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v3/search/epics][%d] searchEpicsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchEpicsBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v3/search/epics][%d] searchEpicsBadRequest  %+v", 400, o.Payload)
}

func (o *SearchEpicsBadRequest) GetPayload() *models.MaxSearchResultsExceededError {
	return o.Payload
}

func (o *SearchEpicsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MaxSearchResultsExceededError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchEpicsNotFound creates a SearchEpicsNotFound with default headers values
func NewSearchEpicsNotFound() *SearchEpicsNotFound {
	return &SearchEpicsNotFound{}
}

/*
SearchEpicsNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type SearchEpicsNotFound struct {
}

// IsSuccess returns true when this search epics not found response has a 2xx status code
func (o *SearchEpicsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search epics not found response has a 3xx status code
func (o *SearchEpicsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search epics not found response has a 4xx status code
func (o *SearchEpicsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search epics not found response has a 5xx status code
func (o *SearchEpicsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search epics not found response a status code equal to that given
func (o *SearchEpicsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SearchEpicsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v3/search/epics][%d] searchEpicsNotFound ", 404)
}

func (o *SearchEpicsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v3/search/epics][%d] searchEpicsNotFound ", 404)
}

func (o *SearchEpicsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchEpicsUnprocessableEntity creates a SearchEpicsUnprocessableEntity with default headers values
func NewSearchEpicsUnprocessableEntity() *SearchEpicsUnprocessableEntity {
	return &SearchEpicsUnprocessableEntity{}
}

/*
SearchEpicsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type SearchEpicsUnprocessableEntity struct {
}

// IsSuccess returns true when this search epics unprocessable entity response has a 2xx status code
func (o *SearchEpicsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search epics unprocessable entity response has a 3xx status code
func (o *SearchEpicsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search epics unprocessable entity response has a 4xx status code
func (o *SearchEpicsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this search epics unprocessable entity response has a 5xx status code
func (o *SearchEpicsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this search epics unprocessable entity response a status code equal to that given
func (o *SearchEpicsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *SearchEpicsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v3/search/epics][%d] searchEpicsUnprocessableEntity ", 422)
}

func (o *SearchEpicsUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/v3/search/epics][%d] searchEpicsUnprocessableEntity ", 422)
}

func (o *SearchEpicsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
