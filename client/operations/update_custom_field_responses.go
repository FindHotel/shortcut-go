// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/FindHotel/shortcut-go/models"
)

// UpdateCustomFieldReader is a Reader for the UpdateCustomField structure.
type UpdateCustomFieldReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCustomFieldReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCustomFieldOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCustomFieldBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCustomFieldNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateCustomFieldConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCustomFieldUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /api/v3/custom-fields/{custom-field-public-id}] updateCustomField", response, response.Code())
	}
}

// NewUpdateCustomFieldOK creates a UpdateCustomFieldOK with default headers values
func NewUpdateCustomFieldOK() *UpdateCustomFieldOK {
	return &UpdateCustomFieldOK{}
}

/*
UpdateCustomFieldOK describes a response with status code 200, with default header values.

Resource
*/
type UpdateCustomFieldOK struct {
	Payload *models.CustomField
}

// IsSuccess returns true when this update custom field o k response has a 2xx status code
func (o *UpdateCustomFieldOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update custom field o k response has a 3xx status code
func (o *UpdateCustomFieldOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update custom field o k response has a 4xx status code
func (o *UpdateCustomFieldOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update custom field o k response has a 5xx status code
func (o *UpdateCustomFieldOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update custom field o k response a status code equal to that given
func (o *UpdateCustomFieldOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update custom field o k response
func (o *UpdateCustomFieldOK) Code() int {
	return 200
}

func (o *UpdateCustomFieldOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/v3/custom-fields/{custom-field-public-id}][%d] updateCustomFieldOK %s", 200, payload)
}

func (o *UpdateCustomFieldOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/v3/custom-fields/{custom-field-public-id}][%d] updateCustomFieldOK %s", 200, payload)
}

func (o *UpdateCustomFieldOK) GetPayload() *models.CustomField {
	return o.Payload
}

func (o *UpdateCustomFieldOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomField)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomFieldBadRequest creates a UpdateCustomFieldBadRequest with default headers values
func NewUpdateCustomFieldBadRequest() *UpdateCustomFieldBadRequest {
	return &UpdateCustomFieldBadRequest{}
}

/*
UpdateCustomFieldBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type UpdateCustomFieldBadRequest struct {
}

// IsSuccess returns true when this update custom field bad request response has a 2xx status code
func (o *UpdateCustomFieldBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update custom field bad request response has a 3xx status code
func (o *UpdateCustomFieldBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update custom field bad request response has a 4xx status code
func (o *UpdateCustomFieldBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update custom field bad request response has a 5xx status code
func (o *UpdateCustomFieldBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update custom field bad request response a status code equal to that given
func (o *UpdateCustomFieldBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update custom field bad request response
func (o *UpdateCustomFieldBadRequest) Code() int {
	return 400
}

func (o *UpdateCustomFieldBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v3/custom-fields/{custom-field-public-id}][%d] updateCustomFieldBadRequest", 400)
}

func (o *UpdateCustomFieldBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v3/custom-fields/{custom-field-public-id}][%d] updateCustomFieldBadRequest", 400)
}

func (o *UpdateCustomFieldBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCustomFieldNotFound creates a UpdateCustomFieldNotFound with default headers values
func NewUpdateCustomFieldNotFound() *UpdateCustomFieldNotFound {
	return &UpdateCustomFieldNotFound{}
}

/*
UpdateCustomFieldNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type UpdateCustomFieldNotFound struct {
}

// IsSuccess returns true when this update custom field not found response has a 2xx status code
func (o *UpdateCustomFieldNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update custom field not found response has a 3xx status code
func (o *UpdateCustomFieldNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update custom field not found response has a 4xx status code
func (o *UpdateCustomFieldNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update custom field not found response has a 5xx status code
func (o *UpdateCustomFieldNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update custom field not found response a status code equal to that given
func (o *UpdateCustomFieldNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update custom field not found response
func (o *UpdateCustomFieldNotFound) Code() int {
	return 404
}

func (o *UpdateCustomFieldNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v3/custom-fields/{custom-field-public-id}][%d] updateCustomFieldNotFound", 404)
}

func (o *UpdateCustomFieldNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v3/custom-fields/{custom-field-public-id}][%d] updateCustomFieldNotFound", 404)
}

func (o *UpdateCustomFieldNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCustomFieldConflict creates a UpdateCustomFieldConflict with default headers values
func NewUpdateCustomFieldConflict() *UpdateCustomFieldConflict {
	return &UpdateCustomFieldConflict{}
}

/*
UpdateCustomFieldConflict describes a response with status code 409, with default header values.

UpdateCustomFieldConflict update custom field conflict
*/
type UpdateCustomFieldConflict struct {
	Payload *models.DataConflictError
}

// IsSuccess returns true when this update custom field conflict response has a 2xx status code
func (o *UpdateCustomFieldConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update custom field conflict response has a 3xx status code
func (o *UpdateCustomFieldConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update custom field conflict response has a 4xx status code
func (o *UpdateCustomFieldConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update custom field conflict response has a 5xx status code
func (o *UpdateCustomFieldConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update custom field conflict response a status code equal to that given
func (o *UpdateCustomFieldConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the update custom field conflict response
func (o *UpdateCustomFieldConflict) Code() int {
	return 409
}

func (o *UpdateCustomFieldConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/v3/custom-fields/{custom-field-public-id}][%d] updateCustomFieldConflict %s", 409, payload)
}

func (o *UpdateCustomFieldConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/v3/custom-fields/{custom-field-public-id}][%d] updateCustomFieldConflict %s", 409, payload)
}

func (o *UpdateCustomFieldConflict) GetPayload() *models.DataConflictError {
	return o.Payload
}

func (o *UpdateCustomFieldConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataConflictError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomFieldUnprocessableEntity creates a UpdateCustomFieldUnprocessableEntity with default headers values
func NewUpdateCustomFieldUnprocessableEntity() *UpdateCustomFieldUnprocessableEntity {
	return &UpdateCustomFieldUnprocessableEntity{}
}

/*
UpdateCustomFieldUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type UpdateCustomFieldUnprocessableEntity struct {
}

// IsSuccess returns true when this update custom field unprocessable entity response has a 2xx status code
func (o *UpdateCustomFieldUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update custom field unprocessable entity response has a 3xx status code
func (o *UpdateCustomFieldUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update custom field unprocessable entity response has a 4xx status code
func (o *UpdateCustomFieldUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update custom field unprocessable entity response has a 5xx status code
func (o *UpdateCustomFieldUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update custom field unprocessable entity response a status code equal to that given
func (o *UpdateCustomFieldUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update custom field unprocessable entity response
func (o *UpdateCustomFieldUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateCustomFieldUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/v3/custom-fields/{custom-field-public-id}][%d] updateCustomFieldUnprocessableEntity", 422)
}

func (o *UpdateCustomFieldUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /api/v3/custom-fields/{custom-field-public-id}][%d] updateCustomFieldUnprocessableEntity", 422)
}

func (o *UpdateCustomFieldUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
