// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/FindHotel/shortcut-go/models"
)

// ListEpicStoriesReader is a Reader for the ListEpicStories structure.
type ListEpicStoriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListEpicStoriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListEpicStoriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListEpicStoriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListEpicStoriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListEpicStoriesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v3/epics/{epic-public-id}/stories] listEpicStories", response, response.Code())
	}
}

// NewListEpicStoriesOK creates a ListEpicStoriesOK with default headers values
func NewListEpicStoriesOK() *ListEpicStoriesOK {
	return &ListEpicStoriesOK{}
}

/*
ListEpicStoriesOK describes a response with status code 200, with default header values.

Resource
*/
type ListEpicStoriesOK struct {
	Payload []*models.StorySlim
}

// IsSuccess returns true when this list epic stories o k response has a 2xx status code
func (o *ListEpicStoriesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list epic stories o k response has a 3xx status code
func (o *ListEpicStoriesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list epic stories o k response has a 4xx status code
func (o *ListEpicStoriesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list epic stories o k response has a 5xx status code
func (o *ListEpicStoriesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list epic stories o k response a status code equal to that given
func (o *ListEpicStoriesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list epic stories o k response
func (o *ListEpicStoriesOK) Code() int {
	return 200
}

func (o *ListEpicStoriesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v3/epics/{epic-public-id}/stories][%d] listEpicStoriesOK %s", 200, payload)
}

func (o *ListEpicStoriesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v3/epics/{epic-public-id}/stories][%d] listEpicStoriesOK %s", 200, payload)
}

func (o *ListEpicStoriesOK) GetPayload() []*models.StorySlim {
	return o.Payload
}

func (o *ListEpicStoriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEpicStoriesBadRequest creates a ListEpicStoriesBadRequest with default headers values
func NewListEpicStoriesBadRequest() *ListEpicStoriesBadRequest {
	return &ListEpicStoriesBadRequest{}
}

/*
ListEpicStoriesBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type ListEpicStoriesBadRequest struct {
}

// IsSuccess returns true when this list epic stories bad request response has a 2xx status code
func (o *ListEpicStoriesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list epic stories bad request response has a 3xx status code
func (o *ListEpicStoriesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list epic stories bad request response has a 4xx status code
func (o *ListEpicStoriesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list epic stories bad request response has a 5xx status code
func (o *ListEpicStoriesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list epic stories bad request response a status code equal to that given
func (o *ListEpicStoriesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list epic stories bad request response
func (o *ListEpicStoriesBadRequest) Code() int {
	return 400
}

func (o *ListEpicStoriesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v3/epics/{epic-public-id}/stories][%d] listEpicStoriesBadRequest", 400)
}

func (o *ListEpicStoriesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v3/epics/{epic-public-id}/stories][%d] listEpicStoriesBadRequest", 400)
}

func (o *ListEpicStoriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListEpicStoriesNotFound creates a ListEpicStoriesNotFound with default headers values
func NewListEpicStoriesNotFound() *ListEpicStoriesNotFound {
	return &ListEpicStoriesNotFound{}
}

/*
ListEpicStoriesNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type ListEpicStoriesNotFound struct {
}

// IsSuccess returns true when this list epic stories not found response has a 2xx status code
func (o *ListEpicStoriesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list epic stories not found response has a 3xx status code
func (o *ListEpicStoriesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list epic stories not found response has a 4xx status code
func (o *ListEpicStoriesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list epic stories not found response has a 5xx status code
func (o *ListEpicStoriesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list epic stories not found response a status code equal to that given
func (o *ListEpicStoriesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list epic stories not found response
func (o *ListEpicStoriesNotFound) Code() int {
	return 404
}

func (o *ListEpicStoriesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v3/epics/{epic-public-id}/stories][%d] listEpicStoriesNotFound", 404)
}

func (o *ListEpicStoriesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v3/epics/{epic-public-id}/stories][%d] listEpicStoriesNotFound", 404)
}

func (o *ListEpicStoriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListEpicStoriesUnprocessableEntity creates a ListEpicStoriesUnprocessableEntity with default headers values
func NewListEpicStoriesUnprocessableEntity() *ListEpicStoriesUnprocessableEntity {
	return &ListEpicStoriesUnprocessableEntity{}
}

/*
ListEpicStoriesUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type ListEpicStoriesUnprocessableEntity struct {
}

// IsSuccess returns true when this list epic stories unprocessable entity response has a 2xx status code
func (o *ListEpicStoriesUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list epic stories unprocessable entity response has a 3xx status code
func (o *ListEpicStoriesUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list epic stories unprocessable entity response has a 4xx status code
func (o *ListEpicStoriesUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list epic stories unprocessable entity response has a 5xx status code
func (o *ListEpicStoriesUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list epic stories unprocessable entity response a status code equal to that given
func (o *ListEpicStoriesUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list epic stories unprocessable entity response
func (o *ListEpicStoriesUnprocessableEntity) Code() int {
	return 422
}

func (o *ListEpicStoriesUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v3/epics/{epic-public-id}/stories][%d] listEpicStoriesUnprocessableEntity", 422)
}

func (o *ListEpicStoriesUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/v3/epics/{epic-public-id}/stories][%d] listEpicStoriesUnprocessableEntity", 422)
}

func (o *ListEpicStoriesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
