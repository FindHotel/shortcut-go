// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// EnableGroupsReader is a Reader for the EnableGroups structure.
type EnableGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EnableGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewEnableGroupsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEnableGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEnableGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewEnableGroupsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /api/v3/groups/enable] enableGroups", response, response.Code())
	}
}

// NewEnableGroupsNoContent creates a EnableGroupsNoContent with default headers values
func NewEnableGroupsNoContent() *EnableGroupsNoContent {
	return &EnableGroupsNoContent{}
}

/*
EnableGroupsNoContent describes a response with status code 204, with default header values.

No Content
*/
type EnableGroupsNoContent struct {
}

// IsSuccess returns true when this enable groups no content response has a 2xx status code
func (o *EnableGroupsNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this enable groups no content response has a 3xx status code
func (o *EnableGroupsNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enable groups no content response has a 4xx status code
func (o *EnableGroupsNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this enable groups no content response has a 5xx status code
func (o *EnableGroupsNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this enable groups no content response a status code equal to that given
func (o *EnableGroupsNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the enable groups no content response
func (o *EnableGroupsNoContent) Code() int {
	return 204
}

func (o *EnableGroupsNoContent) Error() string {
	return fmt.Sprintf("[PUT /api/v3/groups/enable][%d] enableGroupsNoContent", 204)
}

func (o *EnableGroupsNoContent) String() string {
	return fmt.Sprintf("[PUT /api/v3/groups/enable][%d] enableGroupsNoContent", 204)
}

func (o *EnableGroupsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEnableGroupsBadRequest creates a EnableGroupsBadRequest with default headers values
func NewEnableGroupsBadRequest() *EnableGroupsBadRequest {
	return &EnableGroupsBadRequest{}
}

/*
EnableGroupsBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type EnableGroupsBadRequest struct {
}

// IsSuccess returns true when this enable groups bad request response has a 2xx status code
func (o *EnableGroupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enable groups bad request response has a 3xx status code
func (o *EnableGroupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enable groups bad request response has a 4xx status code
func (o *EnableGroupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this enable groups bad request response has a 5xx status code
func (o *EnableGroupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this enable groups bad request response a status code equal to that given
func (o *EnableGroupsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the enable groups bad request response
func (o *EnableGroupsBadRequest) Code() int {
	return 400
}

func (o *EnableGroupsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v3/groups/enable][%d] enableGroupsBadRequest", 400)
}

func (o *EnableGroupsBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v3/groups/enable][%d] enableGroupsBadRequest", 400)
}

func (o *EnableGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEnableGroupsNotFound creates a EnableGroupsNotFound with default headers values
func NewEnableGroupsNotFound() *EnableGroupsNotFound {
	return &EnableGroupsNotFound{}
}

/*
EnableGroupsNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type EnableGroupsNotFound struct {
}

// IsSuccess returns true when this enable groups not found response has a 2xx status code
func (o *EnableGroupsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enable groups not found response has a 3xx status code
func (o *EnableGroupsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enable groups not found response has a 4xx status code
func (o *EnableGroupsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this enable groups not found response has a 5xx status code
func (o *EnableGroupsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this enable groups not found response a status code equal to that given
func (o *EnableGroupsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the enable groups not found response
func (o *EnableGroupsNotFound) Code() int {
	return 404
}

func (o *EnableGroupsNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v3/groups/enable][%d] enableGroupsNotFound", 404)
}

func (o *EnableGroupsNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v3/groups/enable][%d] enableGroupsNotFound", 404)
}

func (o *EnableGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEnableGroupsUnprocessableEntity creates a EnableGroupsUnprocessableEntity with default headers values
func NewEnableGroupsUnprocessableEntity() *EnableGroupsUnprocessableEntity {
	return &EnableGroupsUnprocessableEntity{}
}

/*
EnableGroupsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type EnableGroupsUnprocessableEntity struct {
}

// IsSuccess returns true when this enable groups unprocessable entity response has a 2xx status code
func (o *EnableGroupsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this enable groups unprocessable entity response has a 3xx status code
func (o *EnableGroupsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enable groups unprocessable entity response has a 4xx status code
func (o *EnableGroupsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this enable groups unprocessable entity response has a 5xx status code
func (o *EnableGroupsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this enable groups unprocessable entity response a status code equal to that given
func (o *EnableGroupsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the enable groups unprocessable entity response
func (o *EnableGroupsUnprocessableEntity) Code() int {
	return 422
}

func (o *EnableGroupsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/v3/groups/enable][%d] enableGroupsUnprocessableEntity", 422)
}

func (o *EnableGroupsUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /api/v3/groups/enable][%d] enableGroupsUnprocessableEntity", 422)
}

func (o *EnableGroupsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
