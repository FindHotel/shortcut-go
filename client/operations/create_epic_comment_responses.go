// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/FindHotel/shortcut-go/models"
)

// CreateEpicCommentReader is a Reader for the CreateEpicComment structure.
type CreateEpicCommentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateEpicCommentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateEpicCommentCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateEpicCommentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateEpicCommentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateEpicCommentUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateEpicCommentCreated creates a CreateEpicCommentCreated with default headers values
func NewCreateEpicCommentCreated() *CreateEpicCommentCreated {
	return &CreateEpicCommentCreated{}
}

/*
CreateEpicCommentCreated describes a response with status code 201, with default header values.

Resource
*/
type CreateEpicCommentCreated struct {
	Payload *models.ThreadedComment
}

// IsSuccess returns true when this create epic comment created response has a 2xx status code
func (o *CreateEpicCommentCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create epic comment created response has a 3xx status code
func (o *CreateEpicCommentCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create epic comment created response has a 4xx status code
func (o *CreateEpicCommentCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create epic comment created response has a 5xx status code
func (o *CreateEpicCommentCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create epic comment created response a status code equal to that given
func (o *CreateEpicCommentCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateEpicCommentCreated) Error() string {
	return fmt.Sprintf("[POST /api/v3/epics/{epic-public-id}/comments][%d] createEpicCommentCreated  %+v", 201, o.Payload)
}

func (o *CreateEpicCommentCreated) String() string {
	return fmt.Sprintf("[POST /api/v3/epics/{epic-public-id}/comments][%d] createEpicCommentCreated  %+v", 201, o.Payload)
}

func (o *CreateEpicCommentCreated) GetPayload() *models.ThreadedComment {
	return o.Payload
}

func (o *CreateEpicCommentCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ThreadedComment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateEpicCommentBadRequest creates a CreateEpicCommentBadRequest with default headers values
func NewCreateEpicCommentBadRequest() *CreateEpicCommentBadRequest {
	return &CreateEpicCommentBadRequest{}
}

/*
CreateEpicCommentBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type CreateEpicCommentBadRequest struct {
}

// IsSuccess returns true when this create epic comment bad request response has a 2xx status code
func (o *CreateEpicCommentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create epic comment bad request response has a 3xx status code
func (o *CreateEpicCommentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create epic comment bad request response has a 4xx status code
func (o *CreateEpicCommentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create epic comment bad request response has a 5xx status code
func (o *CreateEpicCommentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create epic comment bad request response a status code equal to that given
func (o *CreateEpicCommentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateEpicCommentBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v3/epics/{epic-public-id}/comments][%d] createEpicCommentBadRequest ", 400)
}

func (o *CreateEpicCommentBadRequest) String() string {
	return fmt.Sprintf("[POST /api/v3/epics/{epic-public-id}/comments][%d] createEpicCommentBadRequest ", 400)
}

func (o *CreateEpicCommentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateEpicCommentNotFound creates a CreateEpicCommentNotFound with default headers values
func NewCreateEpicCommentNotFound() *CreateEpicCommentNotFound {
	return &CreateEpicCommentNotFound{}
}

/*
CreateEpicCommentNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type CreateEpicCommentNotFound struct {
}

// IsSuccess returns true when this create epic comment not found response has a 2xx status code
func (o *CreateEpicCommentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create epic comment not found response has a 3xx status code
func (o *CreateEpicCommentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create epic comment not found response has a 4xx status code
func (o *CreateEpicCommentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create epic comment not found response has a 5xx status code
func (o *CreateEpicCommentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create epic comment not found response a status code equal to that given
func (o *CreateEpicCommentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CreateEpicCommentNotFound) Error() string {
	return fmt.Sprintf("[POST /api/v3/epics/{epic-public-id}/comments][%d] createEpicCommentNotFound ", 404)
}

func (o *CreateEpicCommentNotFound) String() string {
	return fmt.Sprintf("[POST /api/v3/epics/{epic-public-id}/comments][%d] createEpicCommentNotFound ", 404)
}

func (o *CreateEpicCommentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateEpicCommentUnprocessableEntity creates a CreateEpicCommentUnprocessableEntity with default headers values
func NewCreateEpicCommentUnprocessableEntity() *CreateEpicCommentUnprocessableEntity {
	return &CreateEpicCommentUnprocessableEntity{}
}

/*
CreateEpicCommentUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type CreateEpicCommentUnprocessableEntity struct {
}

// IsSuccess returns true when this create epic comment unprocessable entity response has a 2xx status code
func (o *CreateEpicCommentUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create epic comment unprocessable entity response has a 3xx status code
func (o *CreateEpicCommentUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create epic comment unprocessable entity response has a 4xx status code
func (o *CreateEpicCommentUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create epic comment unprocessable entity response has a 5xx status code
func (o *CreateEpicCommentUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create epic comment unprocessable entity response a status code equal to that given
func (o *CreateEpicCommentUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *CreateEpicCommentUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/v3/epics/{epic-public-id}/comments][%d] createEpicCommentUnprocessableEntity ", 422)
}

func (o *CreateEpicCommentUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/v3/epics/{epic-public-id}/comments][%d] createEpicCommentUnprocessableEntity ", 422)
}

func (o *CreateEpicCommentUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
