// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteEpicReader is a Reader for the DeleteEpic structure.
type DeleteEpicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEpicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteEpicNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteEpicBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteEpicNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteEpicUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/v3/epics/{epic-public-id}] deleteEpic", response, response.Code())
	}
}

// NewDeleteEpicNoContent creates a DeleteEpicNoContent with default headers values
func NewDeleteEpicNoContent() *DeleteEpicNoContent {
	return &DeleteEpicNoContent{}
}

/*
DeleteEpicNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteEpicNoContent struct {
}

// IsSuccess returns true when this delete epic no content response has a 2xx status code
func (o *DeleteEpicNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete epic no content response has a 3xx status code
func (o *DeleteEpicNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete epic no content response has a 4xx status code
func (o *DeleteEpicNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete epic no content response has a 5xx status code
func (o *DeleteEpicNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete epic no content response a status code equal to that given
func (o *DeleteEpicNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete epic no content response
func (o *DeleteEpicNoContent) Code() int {
	return 204
}

func (o *DeleteEpicNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/epics/{epic-public-id}][%d] deleteEpicNoContent", 204)
}

func (o *DeleteEpicNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v3/epics/{epic-public-id}][%d] deleteEpicNoContent", 204)
}

func (o *DeleteEpicNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEpicBadRequest creates a DeleteEpicBadRequest with default headers values
func NewDeleteEpicBadRequest() *DeleteEpicBadRequest {
	return &DeleteEpicBadRequest{}
}

/*
DeleteEpicBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type DeleteEpicBadRequest struct {
}

// IsSuccess returns true when this delete epic bad request response has a 2xx status code
func (o *DeleteEpicBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete epic bad request response has a 3xx status code
func (o *DeleteEpicBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete epic bad request response has a 4xx status code
func (o *DeleteEpicBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete epic bad request response has a 5xx status code
func (o *DeleteEpicBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete epic bad request response a status code equal to that given
func (o *DeleteEpicBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete epic bad request response
func (o *DeleteEpicBadRequest) Code() int {
	return 400
}

func (o *DeleteEpicBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/epics/{epic-public-id}][%d] deleteEpicBadRequest", 400)
}

func (o *DeleteEpicBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v3/epics/{epic-public-id}][%d] deleteEpicBadRequest", 400)
}

func (o *DeleteEpicBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEpicNotFound creates a DeleteEpicNotFound with default headers values
func NewDeleteEpicNotFound() *DeleteEpicNotFound {
	return &DeleteEpicNotFound{}
}

/*
DeleteEpicNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type DeleteEpicNotFound struct {
}

// IsSuccess returns true when this delete epic not found response has a 2xx status code
func (o *DeleteEpicNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete epic not found response has a 3xx status code
func (o *DeleteEpicNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete epic not found response has a 4xx status code
func (o *DeleteEpicNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete epic not found response has a 5xx status code
func (o *DeleteEpicNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete epic not found response a status code equal to that given
func (o *DeleteEpicNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete epic not found response
func (o *DeleteEpicNotFound) Code() int {
	return 404
}

func (o *DeleteEpicNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/epics/{epic-public-id}][%d] deleteEpicNotFound", 404)
}

func (o *DeleteEpicNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v3/epics/{epic-public-id}][%d] deleteEpicNotFound", 404)
}

func (o *DeleteEpicNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEpicUnprocessableEntity creates a DeleteEpicUnprocessableEntity with default headers values
func NewDeleteEpicUnprocessableEntity() *DeleteEpicUnprocessableEntity {
	return &DeleteEpicUnprocessableEntity{}
}

/*
DeleteEpicUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type DeleteEpicUnprocessableEntity struct {
}

// IsSuccess returns true when this delete epic unprocessable entity response has a 2xx status code
func (o *DeleteEpicUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete epic unprocessable entity response has a 3xx status code
func (o *DeleteEpicUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete epic unprocessable entity response has a 4xx status code
func (o *DeleteEpicUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete epic unprocessable entity response has a 5xx status code
func (o *DeleteEpicUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete epic unprocessable entity response a status code equal to that given
func (o *DeleteEpicUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete epic unprocessable entity response
func (o *DeleteEpicUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteEpicUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/epics/{epic-public-id}][%d] deleteEpicUnprocessableEntity", 422)
}

func (o *DeleteEpicUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /api/v3/epics/{epic-public-id}][%d] deleteEpicUnprocessableEntity", 422)
}

func (o *DeleteEpicUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
