// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteStoryReactionReader is a Reader for the DeleteStoryReaction structure.
type DeleteStoryReactionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteStoryReactionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteStoryReactionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteStoryReactionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteStoryReactionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteStoryReactionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/v3/stories/{story-public-id}/comments/{comment-public-id}/reactions] deleteStoryReaction", response, response.Code())
	}
}

// NewDeleteStoryReactionNoContent creates a DeleteStoryReactionNoContent with default headers values
func NewDeleteStoryReactionNoContent() *DeleteStoryReactionNoContent {
	return &DeleteStoryReactionNoContent{}
}

/*
DeleteStoryReactionNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteStoryReactionNoContent struct {
}

// IsSuccess returns true when this delete story reaction no content response has a 2xx status code
func (o *DeleteStoryReactionNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete story reaction no content response has a 3xx status code
func (o *DeleteStoryReactionNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete story reaction no content response has a 4xx status code
func (o *DeleteStoryReactionNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete story reaction no content response has a 5xx status code
func (o *DeleteStoryReactionNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete story reaction no content response a status code equal to that given
func (o *DeleteStoryReactionNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete story reaction no content response
func (o *DeleteStoryReactionNoContent) Code() int {
	return 204
}

func (o *DeleteStoryReactionNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/comments/{comment-public-id}/reactions][%d] deleteStoryReactionNoContent", 204)
}

func (o *DeleteStoryReactionNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/comments/{comment-public-id}/reactions][%d] deleteStoryReactionNoContent", 204)
}

func (o *DeleteStoryReactionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteStoryReactionBadRequest creates a DeleteStoryReactionBadRequest with default headers values
func NewDeleteStoryReactionBadRequest() *DeleteStoryReactionBadRequest {
	return &DeleteStoryReactionBadRequest{}
}

/*
DeleteStoryReactionBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type DeleteStoryReactionBadRequest struct {
}

// IsSuccess returns true when this delete story reaction bad request response has a 2xx status code
func (o *DeleteStoryReactionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete story reaction bad request response has a 3xx status code
func (o *DeleteStoryReactionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete story reaction bad request response has a 4xx status code
func (o *DeleteStoryReactionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete story reaction bad request response has a 5xx status code
func (o *DeleteStoryReactionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete story reaction bad request response a status code equal to that given
func (o *DeleteStoryReactionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete story reaction bad request response
func (o *DeleteStoryReactionBadRequest) Code() int {
	return 400
}

func (o *DeleteStoryReactionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/comments/{comment-public-id}/reactions][%d] deleteStoryReactionBadRequest", 400)
}

func (o *DeleteStoryReactionBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/comments/{comment-public-id}/reactions][%d] deleteStoryReactionBadRequest", 400)
}

func (o *DeleteStoryReactionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteStoryReactionNotFound creates a DeleteStoryReactionNotFound with default headers values
func NewDeleteStoryReactionNotFound() *DeleteStoryReactionNotFound {
	return &DeleteStoryReactionNotFound{}
}

/*
DeleteStoryReactionNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type DeleteStoryReactionNotFound struct {
}

// IsSuccess returns true when this delete story reaction not found response has a 2xx status code
func (o *DeleteStoryReactionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete story reaction not found response has a 3xx status code
func (o *DeleteStoryReactionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete story reaction not found response has a 4xx status code
func (o *DeleteStoryReactionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete story reaction not found response has a 5xx status code
func (o *DeleteStoryReactionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete story reaction not found response a status code equal to that given
func (o *DeleteStoryReactionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete story reaction not found response
func (o *DeleteStoryReactionNotFound) Code() int {
	return 404
}

func (o *DeleteStoryReactionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/comments/{comment-public-id}/reactions][%d] deleteStoryReactionNotFound", 404)
}

func (o *DeleteStoryReactionNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/comments/{comment-public-id}/reactions][%d] deleteStoryReactionNotFound", 404)
}

func (o *DeleteStoryReactionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteStoryReactionUnprocessableEntity creates a DeleteStoryReactionUnprocessableEntity with default headers values
func NewDeleteStoryReactionUnprocessableEntity() *DeleteStoryReactionUnprocessableEntity {
	return &DeleteStoryReactionUnprocessableEntity{}
}

/*
DeleteStoryReactionUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type DeleteStoryReactionUnprocessableEntity struct {
}

// IsSuccess returns true when this delete story reaction unprocessable entity response has a 2xx status code
func (o *DeleteStoryReactionUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete story reaction unprocessable entity response has a 3xx status code
func (o *DeleteStoryReactionUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete story reaction unprocessable entity response has a 4xx status code
func (o *DeleteStoryReactionUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete story reaction unprocessable entity response has a 5xx status code
func (o *DeleteStoryReactionUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete story reaction unprocessable entity response a status code equal to that given
func (o *DeleteStoryReactionUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete story reaction unprocessable entity response
func (o *DeleteStoryReactionUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteStoryReactionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/comments/{comment-public-id}/reactions][%d] deleteStoryReactionUnprocessableEntity", 422)
}

func (o *DeleteStoryReactionUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /api/v3/stories/{story-public-id}/comments/{comment-public-id}/reactions][%d] deleteStoryReactionUnprocessableEntity", 422)
}

func (o *DeleteStoryReactionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
