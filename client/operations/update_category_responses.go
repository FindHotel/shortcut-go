// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/FindHotel/shortcut-go/models"
)

// UpdateCategoryReader is a Reader for the UpdateCategory structure.
type UpdateCategoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCategoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCategoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCategoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCategoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCategoryUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /api/v3/categories/{category-public-id}] updateCategory", response, response.Code())
	}
}

// NewUpdateCategoryOK creates a UpdateCategoryOK with default headers values
func NewUpdateCategoryOK() *UpdateCategoryOK {
	return &UpdateCategoryOK{}
}

/*
UpdateCategoryOK describes a response with status code 200, with default header values.

Resource
*/
type UpdateCategoryOK struct {
	Payload *models.Category
}

// IsSuccess returns true when this update category o k response has a 2xx status code
func (o *UpdateCategoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update category o k response has a 3xx status code
func (o *UpdateCategoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update category o k response has a 4xx status code
func (o *UpdateCategoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update category o k response has a 5xx status code
func (o *UpdateCategoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update category o k response a status code equal to that given
func (o *UpdateCategoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update category o k response
func (o *UpdateCategoryOK) Code() int {
	return 200
}

func (o *UpdateCategoryOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/v3/categories/{category-public-id}][%d] updateCategoryOK %s", 200, payload)
}

func (o *UpdateCategoryOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/v3/categories/{category-public-id}][%d] updateCategoryOK %s", 200, payload)
}

func (o *UpdateCategoryOK) GetPayload() *models.Category {
	return o.Payload
}

func (o *UpdateCategoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Category)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCategoryBadRequest creates a UpdateCategoryBadRequest with default headers values
func NewUpdateCategoryBadRequest() *UpdateCategoryBadRequest {
	return &UpdateCategoryBadRequest{}
}

/*
UpdateCategoryBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type UpdateCategoryBadRequest struct {
}

// IsSuccess returns true when this update category bad request response has a 2xx status code
func (o *UpdateCategoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update category bad request response has a 3xx status code
func (o *UpdateCategoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update category bad request response has a 4xx status code
func (o *UpdateCategoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update category bad request response has a 5xx status code
func (o *UpdateCategoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update category bad request response a status code equal to that given
func (o *UpdateCategoryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update category bad request response
func (o *UpdateCategoryBadRequest) Code() int {
	return 400
}

func (o *UpdateCategoryBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v3/categories/{category-public-id}][%d] updateCategoryBadRequest", 400)
}

func (o *UpdateCategoryBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v3/categories/{category-public-id}][%d] updateCategoryBadRequest", 400)
}

func (o *UpdateCategoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCategoryNotFound creates a UpdateCategoryNotFound with default headers values
func NewUpdateCategoryNotFound() *UpdateCategoryNotFound {
	return &UpdateCategoryNotFound{}
}

/*
UpdateCategoryNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type UpdateCategoryNotFound struct {
}

// IsSuccess returns true when this update category not found response has a 2xx status code
func (o *UpdateCategoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update category not found response has a 3xx status code
func (o *UpdateCategoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update category not found response has a 4xx status code
func (o *UpdateCategoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update category not found response has a 5xx status code
func (o *UpdateCategoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update category not found response a status code equal to that given
func (o *UpdateCategoryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update category not found response
func (o *UpdateCategoryNotFound) Code() int {
	return 404
}

func (o *UpdateCategoryNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v3/categories/{category-public-id}][%d] updateCategoryNotFound", 404)
}

func (o *UpdateCategoryNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v3/categories/{category-public-id}][%d] updateCategoryNotFound", 404)
}

func (o *UpdateCategoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCategoryUnprocessableEntity creates a UpdateCategoryUnprocessableEntity with default headers values
func NewUpdateCategoryUnprocessableEntity() *UpdateCategoryUnprocessableEntity {
	return &UpdateCategoryUnprocessableEntity{}
}

/*
UpdateCategoryUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type UpdateCategoryUnprocessableEntity struct {
}

// IsSuccess returns true when this update category unprocessable entity response has a 2xx status code
func (o *UpdateCategoryUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update category unprocessable entity response has a 3xx status code
func (o *UpdateCategoryUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update category unprocessable entity response has a 4xx status code
func (o *UpdateCategoryUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update category unprocessable entity response has a 5xx status code
func (o *UpdateCategoryUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update category unprocessable entity response a status code equal to that given
func (o *UpdateCategoryUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update category unprocessable entity response
func (o *UpdateCategoryUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateCategoryUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/v3/categories/{category-public-id}][%d] updateCategoryUnprocessableEntity", 422)
}

func (o *UpdateCategoryUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /api/v3/categories/{category-public-id}][%d] updateCategoryUnprocessableEntity", 422)
}

func (o *UpdateCategoryUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
