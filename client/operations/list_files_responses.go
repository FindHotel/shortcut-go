// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/FindHotel/shortcut-go/models"
)

// ListFilesReader is a Reader for the ListFiles structure.
type ListFilesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListFilesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListFilesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListFilesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListFilesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListFilesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/v3/files] listFiles", response, response.Code())
	}
}

// NewListFilesOK creates a ListFilesOK with default headers values
func NewListFilesOK() *ListFilesOK {
	return &ListFilesOK{}
}

/*
ListFilesOK describes a response with status code 200, with default header values.

Resource
*/
type ListFilesOK struct {
	Payload []*models.UploadedFile
}

// IsSuccess returns true when this list files o k response has a 2xx status code
func (o *ListFilesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list files o k response has a 3xx status code
func (o *ListFilesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files o k response has a 4xx status code
func (o *ListFilesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list files o k response has a 5xx status code
func (o *ListFilesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list files o k response a status code equal to that given
func (o *ListFilesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list files o k response
func (o *ListFilesOK) Code() int {
	return 200
}

func (o *ListFilesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v3/files][%d] listFilesOK %s", 200, payload)
}

func (o *ListFilesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/v3/files][%d] listFilesOK %s", 200, payload)
}

func (o *ListFilesOK) GetPayload() []*models.UploadedFile {
	return o.Payload
}

func (o *ListFilesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFilesBadRequest creates a ListFilesBadRequest with default headers values
func NewListFilesBadRequest() *ListFilesBadRequest {
	return &ListFilesBadRequest{}
}

/*
ListFilesBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type ListFilesBadRequest struct {
}

// IsSuccess returns true when this list files bad request response has a 2xx status code
func (o *ListFilesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files bad request response has a 3xx status code
func (o *ListFilesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files bad request response has a 4xx status code
func (o *ListFilesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list files bad request response has a 5xx status code
func (o *ListFilesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list files bad request response a status code equal to that given
func (o *ListFilesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list files bad request response
func (o *ListFilesBadRequest) Code() int {
	return 400
}

func (o *ListFilesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v3/files][%d] listFilesBadRequest", 400)
}

func (o *ListFilesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v3/files][%d] listFilesBadRequest", 400)
}

func (o *ListFilesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListFilesNotFound creates a ListFilesNotFound with default headers values
func NewListFilesNotFound() *ListFilesNotFound {
	return &ListFilesNotFound{}
}

/*
ListFilesNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type ListFilesNotFound struct {
}

// IsSuccess returns true when this list files not found response has a 2xx status code
func (o *ListFilesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files not found response has a 3xx status code
func (o *ListFilesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files not found response has a 4xx status code
func (o *ListFilesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list files not found response has a 5xx status code
func (o *ListFilesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list files not found response a status code equal to that given
func (o *ListFilesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list files not found response
func (o *ListFilesNotFound) Code() int {
	return 404
}

func (o *ListFilesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v3/files][%d] listFilesNotFound", 404)
}

func (o *ListFilesNotFound) String() string {
	return fmt.Sprintf("[GET /api/v3/files][%d] listFilesNotFound", 404)
}

func (o *ListFilesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListFilesUnprocessableEntity creates a ListFilesUnprocessableEntity with default headers values
func NewListFilesUnprocessableEntity() *ListFilesUnprocessableEntity {
	return &ListFilesUnprocessableEntity{}
}

/*
ListFilesUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type ListFilesUnprocessableEntity struct {
}

// IsSuccess returns true when this list files unprocessable entity response has a 2xx status code
func (o *ListFilesUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list files unprocessable entity response has a 3xx status code
func (o *ListFilesUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list files unprocessable entity response has a 4xx status code
func (o *ListFilesUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list files unprocessable entity response has a 5xx status code
func (o *ListFilesUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list files unprocessable entity response a status code equal to that given
func (o *ListFilesUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list files unprocessable entity response
func (o *ListFilesUnprocessableEntity) Code() int {
	return 422
}

func (o *ListFilesUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v3/files][%d] listFilesUnprocessableEntity", 422)
}

func (o *ListFilesUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/v3/files][%d] listFilesUnprocessableEntity", 422)
}

func (o *ListFilesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
