// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/FindHotel/shortcut-go/models"
)

// GetRepositoryReader is a Reader for the GetRepository structure.
type GetRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRepositoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRepositoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetRepositoryUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetRepositoryOK creates a GetRepositoryOK with default headers values
func NewGetRepositoryOK() *GetRepositoryOK {
	return &GetRepositoryOK{}
}

/*
GetRepositoryOK describes a response with status code 200, with default header values.

Resource
*/
type GetRepositoryOK struct {
	Payload *models.Repository
}

// IsSuccess returns true when this get repository o k response has a 2xx status code
func (o *GetRepositoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get repository o k response has a 3xx status code
func (o *GetRepositoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repository o k response has a 4xx status code
func (o *GetRepositoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get repository o k response has a 5xx status code
func (o *GetRepositoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get repository o k response a status code equal to that given
func (o *GetRepositoryOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetRepositoryOK) Error() string {
	return fmt.Sprintf("[GET /api/v3/repositories/{repo-public-id}][%d] getRepositoryOK  %+v", 200, o.Payload)
}

func (o *GetRepositoryOK) String() string {
	return fmt.Sprintf("[GET /api/v3/repositories/{repo-public-id}][%d] getRepositoryOK  %+v", 200, o.Payload)
}

func (o *GetRepositoryOK) GetPayload() *models.Repository {
	return o.Payload
}

func (o *GetRepositoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Repository)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoryBadRequest creates a GetRepositoryBadRequest with default headers values
func NewGetRepositoryBadRequest() *GetRepositoryBadRequest {
	return &GetRepositoryBadRequest{}
}

/*
GetRepositoryBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type GetRepositoryBadRequest struct {
}

// IsSuccess returns true when this get repository bad request response has a 2xx status code
func (o *GetRepositoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repository bad request response has a 3xx status code
func (o *GetRepositoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repository bad request response has a 4xx status code
func (o *GetRepositoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get repository bad request response has a 5xx status code
func (o *GetRepositoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get repository bad request response a status code equal to that given
func (o *GetRepositoryBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetRepositoryBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v3/repositories/{repo-public-id}][%d] getRepositoryBadRequest ", 400)
}

func (o *GetRepositoryBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v3/repositories/{repo-public-id}][%d] getRepositoryBadRequest ", 400)
}

func (o *GetRepositoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoryNotFound creates a GetRepositoryNotFound with default headers values
func NewGetRepositoryNotFound() *GetRepositoryNotFound {
	return &GetRepositoryNotFound{}
}

/*
GetRepositoryNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type GetRepositoryNotFound struct {
}

// IsSuccess returns true when this get repository not found response has a 2xx status code
func (o *GetRepositoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repository not found response has a 3xx status code
func (o *GetRepositoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repository not found response has a 4xx status code
func (o *GetRepositoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get repository not found response has a 5xx status code
func (o *GetRepositoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get repository not found response a status code equal to that given
func (o *GetRepositoryNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetRepositoryNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v3/repositories/{repo-public-id}][%d] getRepositoryNotFound ", 404)
}

func (o *GetRepositoryNotFound) String() string {
	return fmt.Sprintf("[GET /api/v3/repositories/{repo-public-id}][%d] getRepositoryNotFound ", 404)
}

func (o *GetRepositoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoryUnprocessableEntity creates a GetRepositoryUnprocessableEntity with default headers values
func NewGetRepositoryUnprocessableEntity() *GetRepositoryUnprocessableEntity {
	return &GetRepositoryUnprocessableEntity{}
}

/*
GetRepositoryUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type GetRepositoryUnprocessableEntity struct {
}

// IsSuccess returns true when this get repository unprocessable entity response has a 2xx status code
func (o *GetRepositoryUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repository unprocessable entity response has a 3xx status code
func (o *GetRepositoryUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repository unprocessable entity response has a 4xx status code
func (o *GetRepositoryUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get repository unprocessable entity response has a 5xx status code
func (o *GetRepositoryUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get repository unprocessable entity response a status code equal to that given
func (o *GetRepositoryUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *GetRepositoryUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /api/v3/repositories/{repo-public-id}][%d] getRepositoryUnprocessableEntity ", 422)
}

func (o *GetRepositoryUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /api/v3/repositories/{repo-public-id}][%d] getRepositoryUnprocessableEntity ", 422)
}

func (o *GetRepositoryUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
