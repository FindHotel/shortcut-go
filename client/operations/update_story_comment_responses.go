// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/FindHotel/shortcut-go/models"
)

// UpdateStoryCommentReader is a Reader for the UpdateStoryComment structure.
type UpdateStoryCommentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateStoryCommentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateStoryCommentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateStoryCommentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateStoryCommentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateStoryCommentUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateStoryCommentOK creates a UpdateStoryCommentOK with default headers values
func NewUpdateStoryCommentOK() *UpdateStoryCommentOK {
	return &UpdateStoryCommentOK{}
}

/*
UpdateStoryCommentOK describes a response with status code 200, with default header values.

Resource
*/
type UpdateStoryCommentOK struct {
	Payload *models.StoryComment
}

// IsSuccess returns true when this update story comment o k response has a 2xx status code
func (o *UpdateStoryCommentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update story comment o k response has a 3xx status code
func (o *UpdateStoryCommentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update story comment o k response has a 4xx status code
func (o *UpdateStoryCommentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update story comment o k response has a 5xx status code
func (o *UpdateStoryCommentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update story comment o k response a status code equal to that given
func (o *UpdateStoryCommentOK) IsCode(code int) bool {
	return code == 200
}

func (o *UpdateStoryCommentOK) Error() string {
	return fmt.Sprintf("[PUT /api/v3/stories/{story-public-id}/comments/{comment-public-id}][%d] updateStoryCommentOK  %+v", 200, o.Payload)
}

func (o *UpdateStoryCommentOK) String() string {
	return fmt.Sprintf("[PUT /api/v3/stories/{story-public-id}/comments/{comment-public-id}][%d] updateStoryCommentOK  %+v", 200, o.Payload)
}

func (o *UpdateStoryCommentOK) GetPayload() *models.StoryComment {
	return o.Payload
}

func (o *UpdateStoryCommentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StoryComment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStoryCommentBadRequest creates a UpdateStoryCommentBadRequest with default headers values
func NewUpdateStoryCommentBadRequest() *UpdateStoryCommentBadRequest {
	return &UpdateStoryCommentBadRequest{}
}

/*
UpdateStoryCommentBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type UpdateStoryCommentBadRequest struct {
}

// IsSuccess returns true when this update story comment bad request response has a 2xx status code
func (o *UpdateStoryCommentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update story comment bad request response has a 3xx status code
func (o *UpdateStoryCommentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update story comment bad request response has a 4xx status code
func (o *UpdateStoryCommentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update story comment bad request response has a 5xx status code
func (o *UpdateStoryCommentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update story comment bad request response a status code equal to that given
func (o *UpdateStoryCommentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *UpdateStoryCommentBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v3/stories/{story-public-id}/comments/{comment-public-id}][%d] updateStoryCommentBadRequest ", 400)
}

func (o *UpdateStoryCommentBadRequest) String() string {
	return fmt.Sprintf("[PUT /api/v3/stories/{story-public-id}/comments/{comment-public-id}][%d] updateStoryCommentBadRequest ", 400)
}

func (o *UpdateStoryCommentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateStoryCommentNotFound creates a UpdateStoryCommentNotFound with default headers values
func NewUpdateStoryCommentNotFound() *UpdateStoryCommentNotFound {
	return &UpdateStoryCommentNotFound{}
}

/*
UpdateStoryCommentNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type UpdateStoryCommentNotFound struct {
}

// IsSuccess returns true when this update story comment not found response has a 2xx status code
func (o *UpdateStoryCommentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update story comment not found response has a 3xx status code
func (o *UpdateStoryCommentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update story comment not found response has a 4xx status code
func (o *UpdateStoryCommentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update story comment not found response has a 5xx status code
func (o *UpdateStoryCommentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update story comment not found response a status code equal to that given
func (o *UpdateStoryCommentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UpdateStoryCommentNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/v3/stories/{story-public-id}/comments/{comment-public-id}][%d] updateStoryCommentNotFound ", 404)
}

func (o *UpdateStoryCommentNotFound) String() string {
	return fmt.Sprintf("[PUT /api/v3/stories/{story-public-id}/comments/{comment-public-id}][%d] updateStoryCommentNotFound ", 404)
}

func (o *UpdateStoryCommentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateStoryCommentUnprocessableEntity creates a UpdateStoryCommentUnprocessableEntity with default headers values
func NewUpdateStoryCommentUnprocessableEntity() *UpdateStoryCommentUnprocessableEntity {
	return &UpdateStoryCommentUnprocessableEntity{}
}

/*
UpdateStoryCommentUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type UpdateStoryCommentUnprocessableEntity struct {
}

// IsSuccess returns true when this update story comment unprocessable entity response has a 2xx status code
func (o *UpdateStoryCommentUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update story comment unprocessable entity response has a 3xx status code
func (o *UpdateStoryCommentUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update story comment unprocessable entity response has a 4xx status code
func (o *UpdateStoryCommentUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update story comment unprocessable entity response has a 5xx status code
func (o *UpdateStoryCommentUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update story comment unprocessable entity response a status code equal to that given
func (o *UpdateStoryCommentUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *UpdateStoryCommentUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api/v3/stories/{story-public-id}/comments/{comment-public-id}][%d] updateStoryCommentUnprocessableEntity ", 422)
}

func (o *UpdateStoryCommentUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /api/v3/stories/{story-public-id}/comments/{comment-public-id}][%d] updateStoryCommentUnprocessableEntity ", 422)
}

func (o *UpdateStoryCommentUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
