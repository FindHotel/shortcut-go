// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListEpicStoriesParams creates a new ListEpicStoriesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListEpicStoriesParams() *ListEpicStoriesParams {
	return &ListEpicStoriesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListEpicStoriesParamsWithTimeout creates a new ListEpicStoriesParams object
// with the ability to set a timeout on a request.
func NewListEpicStoriesParamsWithTimeout(timeout time.Duration) *ListEpicStoriesParams {
	return &ListEpicStoriesParams{
		timeout: timeout,
	}
}

// NewListEpicStoriesParamsWithContext creates a new ListEpicStoriesParams object
// with the ability to set a context for a request.
func NewListEpicStoriesParamsWithContext(ctx context.Context) *ListEpicStoriesParams {
	return &ListEpicStoriesParams{
		Context: ctx,
	}
}

// NewListEpicStoriesParamsWithHTTPClient creates a new ListEpicStoriesParams object
// with the ability to set a custom HTTPClient for a request.
func NewListEpicStoriesParamsWithHTTPClient(client *http.Client) *ListEpicStoriesParams {
	return &ListEpicStoriesParams{
		HTTPClient: client,
	}
}

/*
ListEpicStoriesParams contains all the parameters to send to the API endpoint

	for the list epic stories operation.

	Typically these are written to a http.Request.
*/
type ListEpicStoriesParams struct {

	/* EpicPublicID.

	   The unique ID of the Epic.

	   Format: int64
	*/
	EpicPublicID int64

	/* IncludesDescription.

	   A true/false boolean indicating whether to return Stories with their descriptions.
	*/
	IncludesDescription *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list epic stories params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListEpicStoriesParams) WithDefaults() *ListEpicStoriesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list epic stories params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListEpicStoriesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list epic stories params
func (o *ListEpicStoriesParams) WithTimeout(timeout time.Duration) *ListEpicStoriesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list epic stories params
func (o *ListEpicStoriesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list epic stories params
func (o *ListEpicStoriesParams) WithContext(ctx context.Context) *ListEpicStoriesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list epic stories params
func (o *ListEpicStoriesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list epic stories params
func (o *ListEpicStoriesParams) WithHTTPClient(client *http.Client) *ListEpicStoriesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list epic stories params
func (o *ListEpicStoriesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEpicPublicID adds the epicPublicID to the list epic stories params
func (o *ListEpicStoriesParams) WithEpicPublicID(epicPublicID int64) *ListEpicStoriesParams {
	o.SetEpicPublicID(epicPublicID)
	return o
}

// SetEpicPublicID adds the epicPublicId to the list epic stories params
func (o *ListEpicStoriesParams) SetEpicPublicID(epicPublicID int64) {
	o.EpicPublicID = epicPublicID
}

// WithIncludesDescription adds the includesDescription to the list epic stories params
func (o *ListEpicStoriesParams) WithIncludesDescription(includesDescription *bool) *ListEpicStoriesParams {
	o.SetIncludesDescription(includesDescription)
	return o
}

// SetIncludesDescription adds the includesDescription to the list epic stories params
func (o *ListEpicStoriesParams) SetIncludesDescription(includesDescription *bool) {
	o.IncludesDescription = includesDescription
}

// WriteToRequest writes these params to a swagger request
func (o *ListEpicStoriesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param epic-public-id
	if err := r.SetPathParam("epic-public-id", swag.FormatInt64(o.EpicPublicID)); err != nil {
		return err
	}

	if o.IncludesDescription != nil {

		// query param includes_description
		var qrIncludesDescription bool

		if o.IncludesDescription != nil {
			qrIncludesDescription = *o.IncludesDescription
		}
		qIncludesDescription := swag.FormatBool(qrIncludesDescription)
		if qIncludesDescription != "" {

			if err := r.SetQueryParam("includes_description", qIncludesDescription); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
