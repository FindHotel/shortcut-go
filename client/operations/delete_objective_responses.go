// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteObjectiveReader is a Reader for the DeleteObjective structure.
type DeleteObjectiveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteObjectiveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteObjectiveNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteObjectiveBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteObjectiveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteObjectiveUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/v3/objectives/{objective-public-id}] deleteObjective", response, response.Code())
	}
}

// NewDeleteObjectiveNoContent creates a DeleteObjectiveNoContent with default headers values
func NewDeleteObjectiveNoContent() *DeleteObjectiveNoContent {
	return &DeleteObjectiveNoContent{}
}

/*
DeleteObjectiveNoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteObjectiveNoContent struct {
}

// IsSuccess returns true when this delete objective no content response has a 2xx status code
func (o *DeleteObjectiveNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete objective no content response has a 3xx status code
func (o *DeleteObjectiveNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete objective no content response has a 4xx status code
func (o *DeleteObjectiveNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete objective no content response has a 5xx status code
func (o *DeleteObjectiveNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete objective no content response a status code equal to that given
func (o *DeleteObjectiveNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete objective no content response
func (o *DeleteObjectiveNoContent) Code() int {
	return 204
}

func (o *DeleteObjectiveNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/objectives/{objective-public-id}][%d] deleteObjectiveNoContent", 204)
}

func (o *DeleteObjectiveNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/v3/objectives/{objective-public-id}][%d] deleteObjectiveNoContent", 204)
}

func (o *DeleteObjectiveNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteObjectiveBadRequest creates a DeleteObjectiveBadRequest with default headers values
func NewDeleteObjectiveBadRequest() *DeleteObjectiveBadRequest {
	return &DeleteObjectiveBadRequest{}
}

/*
DeleteObjectiveBadRequest describes a response with status code 400, with default header values.

Schema mismatch
*/
type DeleteObjectiveBadRequest struct {
}

// IsSuccess returns true when this delete objective bad request response has a 2xx status code
func (o *DeleteObjectiveBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete objective bad request response has a 3xx status code
func (o *DeleteObjectiveBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete objective bad request response has a 4xx status code
func (o *DeleteObjectiveBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete objective bad request response has a 5xx status code
func (o *DeleteObjectiveBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete objective bad request response a status code equal to that given
func (o *DeleteObjectiveBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete objective bad request response
func (o *DeleteObjectiveBadRequest) Code() int {
	return 400
}

func (o *DeleteObjectiveBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/objectives/{objective-public-id}][%d] deleteObjectiveBadRequest", 400)
}

func (o *DeleteObjectiveBadRequest) String() string {
	return fmt.Sprintf("[DELETE /api/v3/objectives/{objective-public-id}][%d] deleteObjectiveBadRequest", 400)
}

func (o *DeleteObjectiveBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteObjectiveNotFound creates a DeleteObjectiveNotFound with default headers values
func NewDeleteObjectiveNotFound() *DeleteObjectiveNotFound {
	return &DeleteObjectiveNotFound{}
}

/*
DeleteObjectiveNotFound describes a response with status code 404, with default header values.

Resource does not exist
*/
type DeleteObjectiveNotFound struct {
}

// IsSuccess returns true when this delete objective not found response has a 2xx status code
func (o *DeleteObjectiveNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete objective not found response has a 3xx status code
func (o *DeleteObjectiveNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete objective not found response has a 4xx status code
func (o *DeleteObjectiveNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete objective not found response has a 5xx status code
func (o *DeleteObjectiveNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete objective not found response a status code equal to that given
func (o *DeleteObjectiveNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete objective not found response
func (o *DeleteObjectiveNotFound) Code() int {
	return 404
}

func (o *DeleteObjectiveNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/objectives/{objective-public-id}][%d] deleteObjectiveNotFound", 404)
}

func (o *DeleteObjectiveNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/v3/objectives/{objective-public-id}][%d] deleteObjectiveNotFound", 404)
}

func (o *DeleteObjectiveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteObjectiveUnprocessableEntity creates a DeleteObjectiveUnprocessableEntity with default headers values
func NewDeleteObjectiveUnprocessableEntity() *DeleteObjectiveUnprocessableEntity {
	return &DeleteObjectiveUnprocessableEntity{}
}

/*
DeleteObjectiveUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable
*/
type DeleteObjectiveUnprocessableEntity struct {
}

// IsSuccess returns true when this delete objective unprocessable entity response has a 2xx status code
func (o *DeleteObjectiveUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete objective unprocessable entity response has a 3xx status code
func (o *DeleteObjectiveUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete objective unprocessable entity response has a 4xx status code
func (o *DeleteObjectiveUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete objective unprocessable entity response has a 5xx status code
func (o *DeleteObjectiveUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete objective unprocessable entity response a status code equal to that given
func (o *DeleteObjectiveUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete objective unprocessable entity response
func (o *DeleteObjectiveUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteObjectiveUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /api/v3/objectives/{objective-public-id}][%d] deleteObjectiveUnprocessableEntity", 422)
}

func (o *DeleteObjectiveUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /api/v3/objectives/{objective-public-id}][%d] deleteObjectiveUnprocessableEntity", 422)
}

func (o *DeleteObjectiveUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
